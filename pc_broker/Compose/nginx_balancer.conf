events {}

http {
    upstream influxdb_write {
        server influxdb1:8087;
        server influxdb2:8086;
    }

    upstream influxdb_read {
        server influxdb1:8086 max_fails=3 fail_timeout=10s;
    }

    upstream influxdb_backup {
        server influxdb2:8086;
    }

    server {
        listen 8086 ssl;
        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;

        # Replicación de escrituras en ambas bases de datos
        location /write {
            proxy_pass https://influxdb1;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_connect_timeout 10s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;

            post_action @replica;
        }

        # Enviar copia de la escritura a influxdb2
        location @replica {
            proxy_pass https://influxdb2;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Enrutamiento de las consultas y otras peticiones a influxdb1
        location / {
            proxy_next_upstream error timeout;
            proxy_pass https://influxdb_read;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
        }

        # Failover: Si influxdb1 no responde, redirigir a influxdb2
        error_page 502 504 = @fallback;

        location @fallback {
            proxy_pass https://influxdb_backup;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
        }
    }
}
